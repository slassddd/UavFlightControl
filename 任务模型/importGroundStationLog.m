function [WPLog,logdata] = importGroundStationLog(filename, dataLines)
%IMPORTFILE Import data from a text file
%  LOG20200519 = IMPORTFILE(FILENAME) reads data from text file FILENAME
%  for the default selection.  Returns the data as a cell array.
%
%  LOG20200519 = IMPORTFILE(FILE, DATALINES) reads data for the
%  specified row interval(s) of text file FILENAME. Specify DATALINES as
%  a positive scalar integer or a N-by-2 array of positive scalar
%  integers for dis-contiguous row intervals.
%
%  Example:
%  log20200519 = importfile("D:\PROJECT_FEIMA\组合导航\V1000_firmware\任务模型\地面站log_20200519_条带航线.log", [1, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 2020-05-19 10:07:09

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [1, Inf];
end

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 200);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ":";

% Specify column names and types
opts.VariableNames = ["VarName1", "VarName2", "VarName3", "VarName4", "VarName5", "VarName6", "VarName7"];
opts.VariableTypes = ["char", "double", "char", "double", "char", "char", "char"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["VarName1", "VarName3", "VarName5", "VarName6", "VarName7"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["VarName1", "VarName3", "VarName5", "VarName6", "VarName7"], "EmptyFieldRule", "auto");
opts = setvaropts(opts, "VarName4", "TrimNonNumeric", true);
opts = setvaropts(opts, "VarName4", "ThousandsSeparator", ",");

% Import the data
logdata = readtable(filename, opts);

%% Convert to output type
logdata = table2cell(logdata);
numIdx = cellfun(@(x) ~isnan(str2double(x)), logdata);
logdata(numIdx) = cellfun(@(x) {str2double(x)}, logdata(numIdx));
WPLog = logparser({logdata{:,3}});
end

function WPLog = logparser(logdata)
    nLine = length(logdata);
    matchstrs = {'WP','Parameter1','return method','Airline Type','Headless mode'};
%     idxWP = 1;
    for i = 1:nLine
        thisLineStr = logdata{i};
        matchflag = true;
        for i_matchstr = 1:length(matchstrs) % 此行是否为航点信息
            thisMatchStr = matchstrs{i_matchstr};
            if ~contains(thisLineStr,thisMatchStr)
                matchflag = false;
                break;
            end
        end
        if ~matchflag
            continue;
        end
        % 提取编号
        tempIdx = strfind(thisLineStr,'WP');
        if isnan(str2double(thisLineStr(tempIdx(1)+4))) 
            idxWP = 1+str2double(thisLineStr(tempIdx(1)+3));
        elseif ~isnan(str2double(thisLineStr(tempIdx(1)+4))) && isnan(str2double(thisLineStr(tempIdx(1)+5))) 
            idxWP = 1+str2double(thisLineStr(tempIdx(1)+3:tempIdx(1)+4));
        elseif ~isnan(str2double(thisLineStr(tempIdx(1)+4))) && ~isnan(str2double(thisLineStr(tempIdx(1)+5))) && isnan(str2double(thisLineStr(tempIdx(1)+6))) 
            idxWP = 1+str2double(thisLineStr(tempIdx(1)+3:tempIdx(1)+5));
        end
        WPLog(idxWP).seq = idxWP;
        % 提取LLA
        tempIdx = strfind(thisLineStr,'"');
        WPLog(idxWP).lat = str2double(thisLineStr(tempIdx(1)+1:tempIdx(2)-1));
        WPLog(idxWP).lon = str2double(thisLineStr(tempIdx(3)+1:tempIdx(4)-1));
        WPLog(idxWP).height = str2double(thisLineStr(tempIdx(5)+1:tempIdx(6)-1));
        % 提取param1
        tempIdx = strfind(thisLineStr,'Parameter1');
        WPLog(idxWP).param1 = str2double(thisLineStr(tempIdx(1)+11));
    end
    sl = 1;
end